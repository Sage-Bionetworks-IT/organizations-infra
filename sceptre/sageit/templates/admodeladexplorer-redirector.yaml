AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Provision an S3 bucket, CF distribution to handle redirects for admodelexplorer and modeladexplorer
Parameters:
  StackType:
    Description: Staging or Prod stack
    Type: String
    AllowedValues: ['prod', 'staging']
  AcmCertificateArn:
    Description: ARN of the ACM certificate to apply to the Cloudfront distribution
    Type: String
    AllowedPattern: "arn:aws:acm:.*"
    ConstraintDescription: must be a valid certificate ARN that covers all the domains below (at least prod and staging)
Conditions:
  IsProdEnv: !Equals [prod, !Ref StackType]
Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn-lint:
        config:
          ignore_checks: [ "W3045" ]
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      BucketName: !Sub
      - ${stackPrefix}.admodeladexplorer.org
      - { stackPrefix: !Ref StackType }
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, /*]]
      Bucket: !Ref WebsiteBucket
  Cloudfront:
    DependsOn: RedirectFct
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
          - DomainName: !Sub
            - ${stackPrefix}.admodeladexplorer.org
            - {stackPrefix: !Ref StackType}
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
          - !Sub
            - ${stackPrefix}.admodelexplorer.org
            - { stackPrefix: !Ref StackType }
          - !Sub
            - ${stackPrefix}.modeladexplorer.org
            - { stackPrefix: !Ref StackType }
          - !If
            - IsProdEnv
            - admodelexplorer.org
            - !Ref AWS::NoValue
          - !If
            - IsProdEnv
            - modeladexplorer.org
            - !Ref AWS::NoValue
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
        DefaultCacheBehavior:
          DefaultTTL: 3600
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          FunctionAssociations:
          -
            EventType: viewer-request
            FunctionARN: !Sub
            - arn:aws:cloudfront::${AWS::AccountId}:function/${stackPrefix}-modeladexplorer-redirector-fct
            - { stackPrefix: !Ref StackType }
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
  RedirectFct:
    # Redirect is done with Cloudfront function associated with distribution
    # See https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var req = event.request;
          var host = req.headers.host.value;
          var response = {statusCode: 307, statusDescription: 'OK', headers: { 'cloudfront-functions': { 'value': 'generated-by-CloudFront-Functions' }}}
          if (host.includes('admodel')) {
            response['headers']['location'] = { 'value': 'https://modeladexplorer.org' };
          } else {
            response['headers']['location'] = { 'value': 'https://shinypro.synapse.org/modeladexplorer/' };
          }
        return response;
        }
      FunctionConfig:
        Comment: If coming as admodel, redirect to modelad else redirect to shiny
        Runtime: cloudfront-js-1.0
      Name: !Sub
      - ${stackPrefix}-modeladexplorer-redirector-fct
      - { stackPrefix: !Ref StackType }
Outputs:
  CloudfrontId:
    Value: !Ref Cloudfront
    Description: ID of the Cloudfront distribution
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudfrontId'
  CloudfrontEndpoint:
    Value: !Join ['', ['https://', !GetAtt Cloudfront.DomainName ]]
    Description: URL for cloudfront
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudfrontEndpoint'
  BucketWebsiteUrl:
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Description: URL for website hosted in S3 bucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketWebsiteUrl'
  WebsiteBucket:
    Value: !Ref WebsiteBucket
    Description: The bucket containing the website content
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-WebsiteBucket'
