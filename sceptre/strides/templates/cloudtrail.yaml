Description: Setup Cloudtrail
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  OperatorEmail:
    Type: String
  LogCentralBucket:
    Type: String
    Description: The central S3 bucket where AWS sends logs to.
Resources:
  LogsCloudtrailLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub '/aws/cloudtrail/${AWS::StackName}.log'
  S3CloudtrailBucket:
    Type: "AWS::S3::Bucket"
  S3CloudtrailBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3CloudtrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource:
              !Sub |-
                arn:aws:s3:::${S3CloudtrailBucket}
          -
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
                arn:aws:s3:::${S3CloudtrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
  SNSCloudtrailTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref OperatorEmail
          Protocol: email
  SNSCloudtrailTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      Topics:
        - !Ref SNSCloudtrailTopic
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "CloudtrailTopicPolicy"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Resource: "*"
            Action: "SNS:Publish"
  AWSIAMCloudtrailLogManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailCreateLogStream
            Effect: Allow
            Action:
              - 'logs:CreateLogStream'
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogsCloudtrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*'
          - Sid: AWSCloudTrailPutLogEvents
            Effect: Allow
            Action:
              - 'logs:PutLogEvents'
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogsCloudtrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*'
  AWSIAMCloudtrailLogRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Ref AWSIAMCloudtrailLogManagedPolicy
  AWSCloudtrailTrail:
    DependsOn:
      - S3CloudtrailBucketPolicy
      - SNSCloudtrailTopicPolicy
    Type: "AWS::CloudTrail::Trail"
    Properties:
      CloudWatchLogsLogGroupArn: !GetAtt LogsCloudtrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt AWSIAMCloudtrailLogRole.Arn
      # send all logs to cloudtrail bucket in AWS logcentral account
      S3BucketName: !Ref LogCentralBucket
      SnsTopicName: !GetAtt SNSCloudtrailTopic.TopicName
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
Outputs:
  S3CloudtrailBucket:
    Value: !Ref S3CloudtrailBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudtrailBucket'
  S3CloudtrailBucketArn:
    Value: !GetAtt S3CloudtrailBucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudtrailBucketArn'
