Description: "ServiceCatalog End User policy and group (fdp-1p4dlgcp7)"
Parameters:
  SynapseLoginInstanceRoleArn:
    Type: String
    Description: The Synapse login app's IAM instance role ARN
Resources:
  SCEnduserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServiceCatalogEndusers
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - !Ref SCEnduserExpandedPolicy
        - !Ref CFNDenyGetTemplateSummaryPolicy
        - !Ref SCEnduserRemoteAccessPolicy
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref SynapseLoginInstanceRoleArn
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
  SCExternalEnduserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServiceCatalogExternalEndusers
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - !Ref SCEnduserExpandedPolicy
        - !Ref CFNDenyGetTemplateSummaryPolicy
        - !Ref SCEnduserRemoteAccessPolicy
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref SynapseLoginInstanceRoleArn
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
  SCEnduserExpandedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Expand permissions SC users.
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - organizations:DescribeOrganization
              - servicecatalog:DescribeProvisionedProduct
            Resource: "*"
  SCEnduserRemoteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow calling StartSession on tagged instances
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:StartSession
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ssm:ResourceTag/Protected/AccessApprovedCaller": "${aws:userid}"
          - Effect: Allow
            Action:
              - ssm:DescribeSessions
              - ssm:GetConnectionStatus
              - ssm:DescribeInstanceProperties
              - ec2:DescribeInstances
            Resource: "*"
          - Effect: Allow
            Action:
              - ssm:TerminateSession
            Resource: "*"
            Condition:
              StringLike:
                "ssm:ResourceTag/aws::ssmmessages:session-id": "${aws:userid}"
  CFNDenyGetTemplateSummaryPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Deny
            Action:
              # Deny this action to hide secrets
              - cloudformation:GetTemplateSummary
            Resource: "*"
Outputs:
  EndUserRoleId:
    Value: !GetAtt SCEnduserRole.RoleId
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleId'
  EndUserRoleArn:
    Value: !GetAtt SCEnduserRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleArn'
  EndUserRoleName:
    Value: !Ref SCEnduserRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleName'
  EndUserExpandPolicy:
    Value: !Ref SCEnduserExpandedPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SCEnduserExpandedPolicy'
  EndUserRemoteAccessPolicy:
    Value: !Ref SCEnduserRemoteAccessPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SCEnduserRemoteAccessPolicy'
  ExternalEndUserRoleId:
    Value: !GetAtt SCExternalEnduserRole.RoleId
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleId'
  ExternalEndUserRoleArn:
    Value: !GetAtt SCExternalEnduserRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleArn'
  ExternalEndUserRoleName:
    Value: !Ref SCExternalEnduserRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleName'
