{% set test = false %}
{% if sceptre_user_data.IncludeTestPolicy is defined %}
  {% if sceptre_user_data.IncludeTestPolicy in ('true', 'True', 'TRUE') %}
    {% set test = true %}
  {% endif %}
{% endif %}

Description: "ServiceCatalog End User policy and group (fdp-1p4dlgcp7)"
Parameters:
  SynapseLoginInstanceRoleArn:
    Type: String
    Description: The Synapse login app's IAM instance role ARN
Resources:
  SCEnduserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServiceCatalogEndusers
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess
        - !Ref SCEnduserExpandedPolicy
        - !Ref ScCloudformationPolicy
        - !Ref SCEnduserRemoteAccessPolicy
        - !Ref BatchReadOnlyPolicy
{% if test %}
        - !Ref ScTestPolicy
{% endif %}
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref SynapseLoginInstanceRoleArn
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
  SCExternalEnduserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ServiceCatalogExternalEndusers
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess
        - !Ref SCEnduserExpandedPolicy
        - !Ref ScCloudformationPolicy
        - !Ref SCEnduserRemoteAccessPolicy
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref SynapseLoginInstanceRoleArn
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
  SCEnduserExpandedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Expand permissions SC users.
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - organizations:DescribeOrganization
              - servicecatalog:DescribeProvisionedProduct
              - cloudwatch:GetMetricData  # access to EC2 monitoring info
            Resource: "*"
{% if test %}
  ScTestPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy Statement testing
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeImages  # service catalog status info
              - lambda:ListTags  # service catalog tag updates
            Resource: "*"
          - Effect: Allow
            Action:
              - "ec2:*Tags"
              - "s3:*Tags"
              - "lambda:*Tags"  # RestrictBucketDownloadRegionFunction
              - "iam:TagRole"  # RestrictBucketDownloadRegionRole
              - "iam:UntagRole"  # RestrictBucketDownloadRegionRole
              - "batch:TagResource"
              - "batch:UntagResource"
              - "cloudformation:TagResource"
              - "cloudformation:UntagResource"
              - "cloudwatch:TagResource"
              - "cloudwatch:UntagResource"
              - "kms:TagResource"
              - "kms:UntagResource"
              - "secretsmanager:TagResource"
              - "secretsmanager:UntagResource"
            Resource: "*"
            Condition:
              StringEquals:
                # The 'aws:ResourceTag/foo' key lets us compare against the value of the 'foo' tag on
                # the target resource. Here we are checking the value of the 'provisioningPrincipalArn'
                # service tag against the 'PrincipalArn' from the request.
                # https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html#access_tags_control-resources
                # https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag
                # https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-principalarn
                "aws:ResourceTag/aws:servicecatalog:provisioningPrincipalArn": "${aws.PrincipalArn}"
{% endif %}
  BatchReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Read only access to AWS batch
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "batch:Describe*"
              - "batch:List*"
            Resource: "*"
  SCEnduserRemoteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow calling StartSession on tagged instances
      Path: "/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:StartSession
            Resource:
              - "arn:aws:ssm:*:*:document/SSM-SessionManagerRunShell"
              - "arn:aws:ssm:*:*:document/AWS-StartPortForwardingSession"
              - "arn:aws:ssm:*:*:document/AWS-StartSSHSession"
              - "arn:aws:ssm:*:*:document/AWS-StartInteractiveCommand"
              - "arn:aws:ssm:*:*:document/AWS-StartNonInteractiveCommand"
          - Effect: Allow
            Action:
              - ssm:StartSession
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ssm:ResourceTag/Protected/AccessApprovedCaller": "${aws:userid}"
          - Effect: Allow
            Action:
              - ssm:DescribeSessions
              - ssm:GetConnectionStatus
              - ssm:DescribeDocument
              - ssm:DescribeDocumentParameters
              - ssm:ListDocuments
              - ssm:DescribeInstanceProperties
              - ssm:DescribeInstanceInformation
              - ssm:ListTagsForResource
              - ec2:DescribeInstances
            Resource: "*"
          - Effect: Allow
            Action:
              - ssm:TerminateSession
            Resource: "*"
            Condition:
              StringLike:
                "ssm:ResourceTag/aws::ssmmessages:session-id": "${aws:userid}"
  ScCloudformationPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Sid: DenyCfnTemplateSummary
            Action:
              # Deny this action to hide secrets
              - cloudformation:GetTemplateSummary
            Resource: "*"
          - Effect: Allow
            Sid: AllowCfnChangeSets
            Action:
              - "cloudformation:*ChangeSet*"
            Resource: "*"
Outputs:
  EndUserRoleId:
    Value: !GetAtt SCEnduserRole.RoleId
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleId'
  EndUserRoleArn:
    Value: !GetAtt SCEnduserRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleArn'
  EndUserRoleName:
    Value: !Ref SCEnduserRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogEndusers-RoleName'
  EndUserExpandPolicy:
    Value: !Ref SCEnduserExpandedPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SCEnduserExpandedPolicy'
  EndUserRemoteAccessPolicy:
    Value: !Ref SCEnduserRemoteAccessPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SCEnduserRemoteAccessPolicy'
  ExternalEndUserRoleId:
    Value: !GetAtt SCExternalEnduserRole.RoleId
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleId'
  ExternalEndUserRoleArn:
    Value: !GetAtt SCExternalEnduserRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleArn'
  ExternalEndUserRoleName:
    Value: !Ref SCExternalEnduserRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ServiceCatalogExternalEndusers-RoleName'
