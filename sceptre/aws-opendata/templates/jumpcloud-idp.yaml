Description: Resources for Jumpcloud IDP
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AdminMetadata:
    Type: String
    Description: "Public certificate for the admin Jumpcloud AWS app"
  AuditorMetadata:
    Type: String
    Description: "Public certificate for the auditor Jumpcloud AWS app"
  ViewerMetadata:
    Type: String
    Description: "Public certificate for the viewer JumpCloud AWS app"
  JcAdminGroupName:
    Type: String
    Description: "The Jumpcloud admin group name"
  JcViewerGroupName:
    Type: String
    Description: "The Jumpcloud viewer group name"
  JcAuditorGroupName:
    Type: String
    Description: "The Jumpcloud auditor group name"

Resources:
  AWSIAMCostExplorerAccessPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - ce:Describe*
              - ce:Get*
              - ce:List*
              - ce:*AnomalyMonitor
              - ce:*AnomalySubscription
              - ce:*Report
            Resource: "*"
  AdminSamlProvider:
    Type: Custom::SAMLProvider
    Properties:
      ServiceToken: !ImportValue
        'Fn::Sub': '${AWS::Region}-cfn-cr-saml-provider-FunctionArn'
      Name: !Ref JcAdminGroupName
      Metadata: !Ref AdminMetadata
      URL: ""
  AdminSamlProviderRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 28800
      RoleName: !GetAtt AdminSamlProvider.Name
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        - arn:aws:iam::aws:policy/job-function/Billing
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref AdminSamlProvider
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                "SAML:aud": "https://signin.aws.amazon.com/saml"
  AuditorSamlProvider:
    Type: Custom::SAMLProvider
    Properties:
      ServiceToken: !ImportValue
        'Fn::Sub': '${AWS::Region}-cfn-cr-saml-provider-FunctionArn'
      Name: !Ref JcAuditorGroupName
      Metadata: !Ref AuditorMetadata
      URL: ""
  AuditorSamlProviderRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 28800
      RoleName: !GetAtt AuditorSamlProvider.Name
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - !Ref AWSIAMCostExplorerAccessPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref AuditorSamlProvider
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                "SAML:aud": "https://signin.aws.amazon.com/saml"
  CostExplorerAccessPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - ce:Describe*
              - ce:Get*
              - ce:List*
              - ce:*AnomalyMonitor
              - ce:*AnomalySubscription
              - ce:*Report
            Resource: "*"
  ViewerSamlProvider:
    Type: Custom::SAMLProvider
    Properties:
      ServiceToken: !ImportValue
        'Fn::Sub': '${AWS::Region}-cfn-cr-saml-provider-FunctionArn'
      Name: !Ref JcViewerGroupName
      Metadata: !Ref ViewerMetadata
      URL: ""
  ViewerSamlProviderRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 28800
      RoleName: !GetAtt ViewerSamlProvider.Name
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - !Ref CostExplorerAccessPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref ViewerSamlProvider
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                "SAML:aud": "https://signin.aws.amazon.com/saml"
Outputs:
  AdminSamlProviderArn:
    Value: !Ref AdminSamlProvider
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AdminSamlProviderArn'
  AdminSamlProviderRoleArn:
    Value: !GetAtt AdminSamlProviderRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AdminSamlProviderRoleArn'
  AuditorSamlProviderArn:
    Value: !Ref AuditorSamlProvider
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AuditorSamlProviderArn'
  AuditorSamlProviderRoleArn:
    Value: !GetAtt AuditorSamlProviderRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-AuditorSamlProviderRoleArn'
  ViewerSamlProviderArn:
    Value: !Ref ViewerSamlProvider
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ViewerSamlProviderArn'
  ViewerSamlProviderRoleArn:
    Value: !GetAtt ViewerSamlProviderRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ViewerSamlProviderRoleArn'
