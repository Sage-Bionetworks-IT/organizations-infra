Parameters:
  <<: !Include '../_parameters.yaml'

  appName:
    Type: String
    Default: 'systemsmanager'

  accountId:
    Type: String
    Description: The identifier from the account used to manage this service
    Default: !Ref SysmanCentralAccount

SysmanAutomationServiceRole:
  Type: update-stacks
  Template: AWS-SystemsManager-AutomationServiceRole.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-sysman-automation-service-role'
  StackDescription: Service role for AWS System Manager automation
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref accountId

PatchResourceGroup:
  Type: update-stacks
  Template: patch-resource-group.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-patch-resource-group'
  StackDescription: A group of resources to apply patches to
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: '*'
    IncludeMasterAccount: true

PatchManager:
  Type: update-stacks
  DependsOn: PatchResourceGroup
  Template: Scheduled-Patch-Automation.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-patchmanager'
  StackDescription: Setup Systems manager patch management for the manager
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref accountId
  OrganizationBindings:
    PatchMemberBinding:
      Account: '*'
      IncludeMasterAccount: true
  Parameters:
    EventBridgeRuleSchedule: "cron(15 22 ? * TUE *)"
    RunPatchBaselineRebootOption: "RebootIfNeeded"
    ResourceGroupName: !CopyValue sagebase-systemsmanager-patch-resource-group-TagBasedGroupName
    RunPatchBaselineOperation: "Install"
    TargetRegionIds: "us-east-1"

PatchMembers:
  Type: update-stacks
  Template: AWS-SystemsManager-AutomationExecutionRole.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-patchmember'
  StackDescription: Setup Systems manager patch management for the member
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: '*'
    IncludeMasterAccount: true
  Parameters:
    ManagementAccountNumber: !Ref accountId

# This will run the Stack Armor Nessus installation script each day
# on any EC2 in us-east-1 tagged with execute-script:install-stack-armor-agent
# Since the script is idempotent, running every day ensures the script
# completes in case of a one-time outage
#
# The aim is to install the agent on instances running in the Synapse production
# account. The automation to deploy the Synapse production stack will add the
# necessary tags.  Other stacks deployed to the account will have to include
# the tag in their deployment scripts.
StackArmorAgentInstallation:
  Type: update-stacks
  Template: Scheduled-Script-Automation.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-script-execution'
  StackDescription: Setup Systems manager automatic script execution
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref accountId
  OrganizationBindings:
    ScriptExecutionMemberBinding:
      Account: '*'
      IncludeMasterAccount: true
  Parameters:
    EventBridgeRuleSchedule: "cron(0 2 * * ? *)"
    TargetRegionIds: "us-east-1"
    TargetTagName: execute-script
    TargetTagValue: install-stack-armor-agent
    ScriptUrl: https://raw.githubusercontent.com/Sage-Bionetworks/infra-utils/v1.0.11/stack-armor/install-nessus-agent.sh
    ScriptParameters: STACK_ARMOR_KEY:/stack-armor/install-nessus-key
