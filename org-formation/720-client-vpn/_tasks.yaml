Parameters:
  <<: !Include '../_parameters.yaml'

  appName:
    Type: String
    Default: 'client-vpn'

  accountId:
    Type: String
    Description: The identifier for the account
    Default: !Ref TransitAccount

  vpnVpc:
    Type: String
    Description: The VPC name to associate with the VPN
    Default: 'unionstationvpc'

VpnIdp:
  Type: update-stacks
  Template: vpn-idp.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-idp'
  StackDescription: Setup VPN integration with IDP
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref accountId
  OrganizationBindings:
    AllBinding:
      Account:
        - !Ref accountId
      IncludeMasterAccount: false
  Parameters:
    TransitVpnMetadata: !ReadFile idp/jumpcloud/transitvpn.xml
    TransitVpnSspMetadata: !ReadFile idp/jumpcloud/transitvpnssp.xml

Vpn:
  DependsOn: [ VpnIdp ]
  Type: update-stacks
  Template: vpn.njk
  StackName: !Sub '${resourcePrefix}-${appName}'
  StackDescription: The AWS client VPN
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref accountId
  OrganizationBindings:
    AllBinding:
      Account:
        - !Ref accountId
      IncludeMasterAccount: false
  TemplatingContext:
    # work around for issue https://github.com/org-formation/org-formation-cli/issues/259
    SubnetIds:
      - !Sub '!ImportValue ${resourcePrefix}-tgw-${vpnVpc}-SubnetA'
      - !Sub '!ImportValue ${resourcePrefix}-tgw-${vpnVpc}-SubnetB'
      - !Sub '!ImportValue ${resourcePrefix}-tgw-${vpnVpc}-SubnetC'
    TgwSpokes:
      # "10.50.0.0/16" (unionstationvpc) route automatically setup by the VPN endpoint association
      # AccessGroups values must match Jumpcloud User Group names

      # org-sagebase-itsandbox
      dustbunnyvpc:
        CIDR: "10.29.0.0/16"
        AccessGroups:
          - "aws-admins"
      # org-sagebase-sandbox
      sandcastlevpc:
        CIDR: "10.23.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "aws-sandbox-developers"
          - "scientists"
      # org-sagebase-scicomp
      computevpc:
        CIDR: "10.5.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "aws-scicomp-developers"
          - "scientists"
      snowflakevpc:
        CIDR: "10.25.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "aws-scicomp-developers"
      # org-sagebase-bridgedev
      BridgeServer2-develop-vpc:
        CIDR: "172.48.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "bridge-developers"
      bridge-aux:
        CIDR: "172.51.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "bridge-developers"
      # org-sagebase-bridgeprod
      BridgeServer2-vpc:
        CIDR: "172.32.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "bridge-developers"
      # org-sagebase-synapsedw
      synapsedw-vpc:
        CIDR: "10.12.0.0/16"
        AccessGroups:
          - "aws-admins"
          - "aws-synapse-admins"

  Parameters:
    ClientCidrBlock: "10.100.0.0/16"
    VpnSamlProviderArn: !CopyValue [!Sub '${resourcePrefix}-${appName}-idp-TransitVpnSamlProviderArn']
    VpnSspSamlProviderArn: !CopyValue [!Sub '${resourcePrefix}-${appName}-idp-TransitVpnSspSamlProviderArn']
    VpcId: !CopyValue [!Sub '${resourcePrefix}-tgw-${vpnVpc}-VpcId']
    ConnectionLogGroup: !Sub '/aws/vpn/${resourcePrefix}-${appName}'
    SessionTimeoutHours: "12"
    LogRetentionInDays: "3653"
    # manually generated and imported server cert, saved to lastpass "Sage VPN Certificate"
    # https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-getting-started.html#cvpn-getting-started-certs
    ServerCertificateArn: !Sub 'arn:aws:acm:${primaryRegion}:${accountId}:certificate/8bdbf421-c38a-4d87-8a03-821a1b7acab6'
    SplitTunnel: "false"

VpnEndpointRedirect:
  DependsOn: [ Vpn ]
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/master/templates/s3-redirector.yaml
  StackName: !Sub '${resourcePrefix}-${appName}-redirect'
  StackDescription: Setup a redirect to the VPN URL endpoint
  DefaultOrganizationBindingRegion: !Ref primaryRegion
  DefaultOrganizationBinding:
    Account: !Ref SageITAccount
  Parameters:
    # the endpoint we are redirecting from
    SourceHostName: "vpn.sageit.org"
    SourceAcmCertificateArn: !CopyValue [!Sub '${primaryRegion}-sageit-org-acm-cert-CertificateArn']
    # ID of the sageit.org zone (in sageit account)
    SourceHostedZoneId: "Z0478495257GEB73WFM63"
    # the endpoint we are redirecting to (AWS VPN client self service)
    TargetHostName: "self-service.clientvpn.amazonaws.com"
    # and a path to our specific config
    TargetKey: !Join ['/', ['endpoints', !CopyValue [!Sub '${resourcePrefix}-${appName}-EndpointId', !Ref TransitAccount]]]
