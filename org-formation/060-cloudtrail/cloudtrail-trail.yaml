# From https://github.com/org-formation/org-formation-reference/tree/master/src/templates/060-cloud-trail
AWSTemplateFormatVersion: '2010-09-09-OC'

Parameters:
  LogGroupName:
    Type: String
    Description: >-
      The cloudwatch log group name (i.e. /aws/myapp/tomcat/server.log)
  RetentionInDays:
    Type: Number
    Description: >-
      The number of days to retain the log events in the specified log group. Possible values are:
      1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.
    Default: 90
    MinValue: 1
    MaxValue: 3653
  bucketName:
    Type: String
  KmsKeyAdminPrincipalArns:
    Type: CommaDelimitedList
    Description: List of user/role/account ARNs that can administer the key
  IsOrganizationTrail:
    Type: String
    Description: Specifies whether the trail is applied to all accounts in an organization in AWS Organizations
    Default: false

Resources:
  KmsKey:
    Type: "AWS::KMS::Key"
    Properties:
      Description: !Sub '${AWS::StackName} created key'
      EnableKeyRotation: "true"
      PendingWindowInDays: 7
      KeyPolicy:
        # policy copied from manual setup of cloudtrail with encryption
        Version: '2012-10-17'
        Id: Key policy created by CloudTrail
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Ref KmsKeyAdminPrincipalArns
          Action: kms:*
          Resource: "*"
        - Sid: Allow CloudTrail to encrypt logs
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: kms:GenerateDataKey*
          Resource: "*"
          Condition:
            StringEquals:
              AWS:SourceArn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/${AWS::StackName}*'
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow CloudTrail to describe key
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: kms:DescribeKey
          Resource: "*"
        - Sid: Allow principals in the account to decrypt log files
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Decrypt
          - kms:ReEncryptFrom
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref AWS::AccountId
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow alias creation during setup
          Effect: Allow
          Principal:
            AWS: "*"
          Action: kms:CreateAlias
          Resource: "*"
          Condition:
            StringEquals:
              kms:ViaService: ec2.us-east-1.amazonaws.com
              kms:CallerAccount: !Ref AWS::AccountId
        - Sid: Enable cross account log decryption
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Decrypt
          - kms:ReEncryptFrom
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref AWS::AccountId
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
  LogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: !Ref RetentionInDays
  LogPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailCreateLogStream
            Effect: Allow
            Action:
              - 'logs:CreateLogStream'
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*'
          - Sid: AWSCloudTrailPutLogEvents
            Effect: Allow
            Action:
              - 'logs:PutLogEvents'
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*'
  LogRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Ref LogPolicy
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1012
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref bucketName
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      # Move data to glacier after 90 days then move to deep archive after 180 days then delete after 365 days
      LifecycleConfiguration:
        Rules:
        - Id: DataLifecycleRule
          Status: Enabled
          ExpirationInDays: 365
          Transitions:
            - TransitionInDays: 90
              StorageClass: GLACIER
            - TransitionInDays: 180
              StorageClass: DEEP_ARCHIVE
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1012
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        # policy copied from manual setup of cloudtrail with encryption
        Version: 2012-10-17
        Statement:
        - Sid: AWSCloudTrailAclCheck20150319
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource: !GetAtt CloudTrailBucket.Arn
        - Sid: AWSCloudTrailWrite20150319
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource: !Sub '${CloudTrailBucket.Arn}/AWSLogs/*'
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref CloudTrailBucket
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt LogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt LogRole.Arn
      KMSKeyId: !Ref KmsKey
      IsOrganizationTrail: !Ref IsOrganizationTrail

Outputs:
  CloudTrailBucketName:
    Value: !Ref CloudTrailBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailBucketName'
  CloudTrailBucketArn:
    Value: !GetAtt CloudTrailBucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailBucketArn'
  CloudTrailArn:
    Value: !GetAtt CloudTrail.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailArn'
