# From https://github.com/org-formation/org-formation-reference/tree/master/src/templates/060-cloud-trail
AWSTemplateFormatVersion: '2010-09-09-OC'

Parameters:
  bucketName:
    Type: String
  CloudWatchLogsLogGroupArn:
    Type: String
    Default: ""
  CloudWatchLogsRoleArn:
    Type: String
    Default: ""
  KmsKeyAdminPrincipalArns:
    Type: CommaDelimitedList
    Description: List of user/role/account ARNs that can administer the key
Resources:
  KmsKey:
    OrganizationBinding: !Ref MasterBinding
    Type: "AWS::KMS::Key"
    Properties:
      Description: !Sub '${AWS::StackName} created key'
      EnableKeyRotation: "true"
      PendingWindowInDays: 7
      KeyPolicy:
        # derived from https://docs.aws.amazon.com/awscloudtrail/latest/userguide/default-kms-key-policy.html
        Version: '2012-10-17'
        Id: Key policy created by CloudTrail
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Ref KmsKeyAdminPrincipalArns
          Action: kms:*
          Resource: "*"
        - Sid: Allow CloudTrail to encrypt logs
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: kms:GenerateDataKey*
          Resource: "*"
          Condition:
            StringEquals:
              AWS:SourceArn: !Sub 'arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/*'
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow CloudTrail to describe key
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: kms:DescribeKey
          Resource: "*"
        - Sid: Allow principals in the account to decrypt log files
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Decrypt
          - kms:ReEncryptFrom
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Sub '${AWS::AccountId}'
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow alias creation during setup
          Effect: Allow
          Principal:
            AWS: "*"
          Action: kms:CreateAlias
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Sub '${AWS::AccountId}'
              kms:ViaService: ec2.us-east-1.amazonaws.com
        - Sid: Enable cross account log decryption
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - kms:Decrypt
          - kms:ReEncryptFrom
          Resource: "*"
          Condition:
            StringEquals:
              kms:CallerAccount: !Sub '${AWS::AccountId}'
            StringLike:
              kms:EncryptionContext:aws:cloudtrail:arn: !Sub 'arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*'

  CloudTrailBucket:
    OrganizationBinding: !Ref MasterBinding
    Type: AWS::S3::Bucket
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1012
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref bucketName
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled

  CloudTrailBucketPolicy:
    OrganizationBinding: !Ref MasterBinding
    Type: AWS::S3::BucketPolicy
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E1012
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt CloudTrailBucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub '${CloudTrailBucket.Arn}/AWSLogs/*'
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CloudTrail:
    OrganizationBinding: !Ref MasterBinding
    Type: AWS::CloudTrail::Trail
    DependsOn: CloudTrailBucketPolicy
    Properties:
      S3BucketName: !Ref CloudTrailBucket
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !Ref CloudWatchLogsLogGroupArn
      CloudWatchLogsRoleArn: !Ref CloudWatchLogsRoleArn
#      KMSKeyId: !Ref KmsKey

  MemberCloudTrail:
    OrganizationBinding: !Ref MemberBinding
    Type: AWS::CloudTrail::Trail
    DependsOn: CloudTrailBucketPolicy
    Properties:
      S3BucketName: !Ref CloudTrailBucket
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !Ref CloudWatchLogsLogGroupArn
      CloudWatchLogsRoleArn: !Ref CloudWatchLogsRoleArn

Outputs:
  CloudTrailBucketName:
    Value: !Ref CloudTrailBucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailBucketName'
  CloudTrailBucketArn:
    Value: !GetAtt CloudTrailBucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailBucketArn'
  CloudTrailArn:
    Value: !GetAtt CloudTrail.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailArn'
  MemberCloudTrailArn:
    Value: !GetAtt MemberCloudTrail.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-CloudTrailArn'
