Parameters:
  <<: !Include '../_parameters.yaml'

# A service account for https://github.com/Sage-Bionetworks/agora-infra
AgoraCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-account.yaml
  StackName: ci-service-access
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
      - arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref AgoraDevAccount
      - !Ref AgoraProdAccount
    Region: us-east-1

# A service account for https://github.com/Sage-Bionetworks/iatlas-infra
iAtlasCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: iatlas-prod-ci-access
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account: !Ref iAtlasProdAccount
    Region: us-east-1

# A service account for challenge infrastructure CF repos.
CnbChallengeInfraServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: cnb-challenge-infra-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account: !Ref CnbAccount
    Region: !Ref primaryRegion

# Service account for provisioner repository: https://github.com/ncihtan/aws-htan-infra
HtanDevCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: htan-dev-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref HtanDevAccount
    Region: us-east-1

# Service accounts for https://github.com/Sage-Bionetworks-Workflows/aws-workflows-nextflow-infra
MobileHealthDataEngineeringCIServiceAccounts:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: mobile-health-dataengineering-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref MobileHealthDataEngineeringDevAccount
      - !Ref MobileHealthDataEngineeringProdAccount
    Region: us-east-1

CnbCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: cnb-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref CnbAccount
    Region: !Ref primaryRegion

# A service account for https://github.com/Sceptre/sceptre-aws
SceptreCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-account.yaml
  StackName: sceptre-ci-service-access
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref SceptreDevAccount
    Region: us-east-1

DnTDevCIServiceAccounts:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-account.yaml
  StackName: dnt-dev-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref DnTDevAccount
    Region: us-east-1

SynapseProdRedashServiceUser:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-user.yaml
  StackName: synapseprod-redash-service-user
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::prod.datawarehouse.sagebase.org/*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:GetBucketLocation",
              "s3:ListBucket"
            ],
            "Resource": "arn:aws:s3:::prod.datawarehouse.sagebase.org"
          }
        ]
      }
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref SynapseProdAccount
    Region: us-east-1

CostExplorerAccessPolicy:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.5.1/templates/IAM/managed-policy.yaml
  StackName: cost-explorer-access-policy
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
    Account: '*'
    Region: !Ref primaryRegion
  Parameters:
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
                "ce:Describe*",
                "ce:Get*",
                "ce:List*",
                "ce:*AnomalyMonitor",
                "ce:*AnomalySubscription",
                "ce:*Report"
            ],
            "Resource": "*"
          }
        ]
      }
    PolicyName: !Ref CostExplorerPolicyName

SynapseAthenaUserAccessPolicy:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.5.1/templates/IAM/managed-policy.yaml
  StackName: synapse-athena-user-access-policy
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
    Account: '*'
    Region: !Ref primaryRegion
  Parameters:
    PolicyDocument: !Sub >-
      {
        "Version": "2012-10-17",
        "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "athena:ListDataCatalogs",
                "athena:ListWorkGroups"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "athena:GetDataCatalog",
                "athena:ListDatabases",
                "athena:GetDatabase",
                "athena:GetTableMetadata",
                "athena:ListTableMetadata"
            ],
            "Resource": [
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:datacatalog",
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:datacatalog/AwsDataCatalog"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "glue:GetDatabases",
                "glue:GetDatabase",
                "glue:GetTables",
                "glue:GetTable",
                "glue:GetPartitions",
                "glue:GetPartition",
                "glue:BatchGetPartition"
            ],
            "Resource": [
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:catalog",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/*warehouse",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/*warehouse/*",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/scratch",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/scratch/*",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/*firehoselogs",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/*firehoselogs/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "glue:CreateTable"
            ],
            "Resource": [
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:catalog",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/scratch",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/scratch/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "athena:StartQueryExecution",
                "athena:GetQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CreateWorkGroup",
                "athena:CreateNamedQuery",
                "athena:ListNamedQueries",
                "athena:BatchGetNamedQuery",
                "athena:GetQueryResultsStream",
                "athena:GetQueryRuntimeStatistics",
                "athena:ListQueryExecutions"
            ],
            "Resource": [
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:workgroup/*"
            ]
        },
            {
                "Effect": "Allow",
                "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:PutObject"
                ],
                "Resource": [
                    "arn:aws:s3:::aws-athena-query-results-${CurrentAccount.AccountId}-us-east-1",
                    "arn:aws:s3:::aws-athena-query-results-${CurrentAccount.AccountId}-us-east-1/*",
                    "arn:aws:s3:::aws-athena-query-results-us-east-1-${CurrentAccount.AccountId}",
                    "arn:aws:s3:::aws-athena-query-results-us-east-1-${CurrentAccount.AccountId}/*",
                    "arn:aws:s3:::*.athena-queries.sagebase.org",
                    "arn:aws:s3:::*.athena-queries.sagebase.org/*"
                ]
            },
            {
                "Effect": "Allow",
                "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket"
                ],
                "Resource": [
                    "arn:aws:s3:::*.datawarehouse.sagebase.org",
                    "arn:aws:s3:::*.datawarehouse.sagebase.org/*",
                    "arn:aws:s3:::*.log.sagebase.org",
                    "arn:aws:s3:::*.log.sagebase.org/*",
                    "arn:aws:s3:::*.filehandles.sagebase.org",
                    "arn:aws:s3:::*.filehandles.sagebase.org/*"
                ]
            }
        ]
      }
    PolicyName: SynapseAthenaUserAccessPolicy
