Parameters:
  <<: !Include '../_parameters.yaml'

# A service account for https://github.com/Sage-Bionetworks/iatlas-infra
iAtlasCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: iatlas-prod-ci-access
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account: !Ref iAtlasProdAccount
    Region: us-east-1

# A service account for challenge infrastructure CF repos.
CnbChallengeInfraServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: cnb-challenge-infra-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account: !Ref CnbAccount
    Region: !Ref primaryRegion

# Service account for provisioner repository: https://github.com/ncihtan/aws-htan-infra
HtanDevCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: htan-dev-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref HtanDevAccount
    Region: us-east-1

# Service accounts for https://github.com/Sage-Bionetworks-Workflows/aws-workflows-nextflow-infra
MobileHealthDataEngineeringCIServiceAccounts:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: mobile-health-dataengineering-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref MobileHealthDataEngineeringDevAccount
      - !Ref MobileHealthDataEngineeringProdAccount
    Region: us-east-1

CnbCIServiceAccount:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.4/templates/IAM/service-account.yaml
  StackName: cnb-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref CnbAccount
    Region: !Ref primaryRegion

DnTDevCIServiceAccounts:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-account.yaml
  StackName: dnt-dev-ci-service-account
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref DnTDevAccount
    Region: us-east-1

SynapseProdRedashServiceUser:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.3.8/templates/IAM/service-user.yaml
  StackName: synapseprod-redash-service-user
  Parameters:
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::prod.datawarehouse.sagebase.org/*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:GetBucketLocation",
              "s3:ListBucket"
            ],
            "Resource": "arn:aws:s3:::prod.datawarehouse.sagebase.org"
          }
        ]
      }
  DefaultOrganizationBinding:
    IncludeMasterAccount: false
    Account:
      - !Ref SynapseProdAccount
    Region: us-east-1


# Setup Four Points access IT-3758
FPTMinimumAccess:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.10/templates/IAM/cross-account-access.yaml
  StackName: strides-fpt-minimum-access
  DefaultOrganizationBinding:
    Account: !Ref MasterAccount
    Region: us-east-1
  Parameters:
    PrincipalArns:
      - arn:aws:iam::610061289380:user/danabiller      # Dana Bean
      - arn:aws:iam::610061289380:user/michellebiller  # Michelle Kosiorek
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/ReadOnlyAccess
      - arn:aws:iam::aws:policy/job-function/Billing
      - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      - arn:aws:iam::aws:policy/AWSSupportAccess
      - arn:aws:iam::aws:policy/AWSAccountUsageReportAccess
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "FullAccessToCostAndUsageReports",
            "Effect": "Allow",
            "Action": "cur:*",
            "Resource": "*"
          },
          {
            "Sid": "FullAccessToCostExplorer",
            "Effect": "Allow",
            "Action": "ce:*",
            "Resource": "*"
          },
          {
            "Sid": "CreateCurExportsInDataExports",
            "Effect": "Allow",
            "Action": ["bcm-data-exports:*"],
            "Resource": [
                  "arn:aws:bcm-data-exports:*:*:export/*",
                  "arn:aws:bcm-data-exports:*:*:table/COST_AND_USAGE_REPORT"
                  ]
          },
          {
            "Sid": "CurDataAccess",
            "Effect": "Allow",
            "Action": ["cur:PutReportDefinition"],
            "Resource": "*"
          }
        ]
      }

# Setup StackArmor read-only access IT-3780
StackArmorReadOnlyAccess:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.10/templates/IAM/cross-account-access.yaml
  StackName: stack-armor-read-only-access
  DefaultOrganizationBinding:
    Account: !Ref SynapseProdAccount
    Region: us-east-1
  Parameters:
    PrincipalArns:
      - arn:aws:iam::726064622671:root # StackArmor AWS account ID
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      - arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess

# Setup cross-account access to BedRock in SynapseLlmProd account
# https://repost.aws/knowledge-center/bedrock-invoke-with-cross-account
SynapseLlmProdBedrockFullAccess:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.10/templates/IAM/cross-account-access.yaml
  StackName: synapsellmprod-bedrock-full-access
  DefaultOrganizationBinding:
    Account: !Ref SynapseLlmProdAccount
    Region: us-east-1
  Parameters:
    PrincipalArns:
      - arn:aws:iam::325565585839:root # SynapseProd AWS account ID
      - arn:aws:iam::449435941126:root # SynapseDev AWS account ID
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonBedrockFullAccess


# Setup Gen AI AWS team access (issue IT-4355)
GenAiIcCollaboratorAccess:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.10/templates/IAM/cross-account-access.yaml
  StackName: genaiic-collaborator-access
  DefaultOrganizationBinding:
    Account: !Ref GenAiIcDevAccount
    Region: us-east-1
  Parameters:
    PrincipalArns:
      - arn:aws:iam::029325337269:role/Admin
    # Cloudformation parameter limit is 4096 chars, so we need to minify the json
    PolicyDocument: >-
      {"Version":"2012-10-17","Statement":[{"Sid":"DefaultGenAiICPermissions","Effect":"Allow","Action":["bedrock:*","sagemaker:*","sagemaker-mlflow:*","textract:*","transcribe:*","rekognition:*","lambda:*","states:*","s3:*","execute-api:*","apigateway:*","es:*","aoss:*","osis:*","dynamodb:*","dax:*","ecs:*","ecr:*","iam:*","codepipeline:*","ec2:*","events:*","scheduler:*","sns:*","sqs:*","securityhub:*","guardduty:*","config:*","cloudtrail:*","macie2:*","inspector2:*"],"Resource":"*"},{"Sid":"ModelEnablementPermission","Effect":"Allow","Action":["aws-marketplace:Subscribe"],"Resource":"*"},{"Sid":"RestrictPublicAccess","Effect":"Deny","Action":["elasticmapreduce:PutBlockPublicAccessConfiguration","s3:PutAccountPublicAccessBlock"],"Resource":"*"},{"Sid":"SecureLoggingConfigs","Effect":"Deny","Action":["cloudtrail:StopLogging","cloudtrail:DeleteTrail","cloudwatch:DeleteAlarms","cloudwatch:DeleteDashboards","cloudwatch:DisableAlarmActions"],"Resource":"*"},{"Sid":"SecureSecurityServices","Effect":"Deny","Action":["guardduty:DeleteDetector","guardduty:DeleteInvitations","guardduty:DeleteIPSet","guardduty:DeleteMembers","guardduty:DeleteThreatIntelSet","guardduty:DisassociateFromMasterAccount","guardduty:DisassociateMembers","guardduty:StopMonitoringMembers","guardduty:UpdateDetector","config:DeleteConfigRule","config:DeleteConfigurationRecorder","config:DeleteDeliveryChannel","config:StopConfigurationRecorder","securityhub:Disable*","securityhub:BatchDeleteAutomationRules","securityhub:BatchDisableStandards","securityhub:Delete*","securityhub:Disassociate*","macie2:CreateClassificationJob","macie2:UpdateClassificationJob","macie2:UpdateFindingsFilter","macie2:CreateFindingsFilter","macie2:DeleteFindingsFilter","macie2:DeleteMember","macie2:DisableMacie","macie2:DisableOrganizationAdminAccount","macie2:DisassociateFromAdministratorAccount","macie2:DisassociateMember","macie2:UpdateMacieSession","macie2:UpdateMemberSession"],"Resource":"*"},{"Sid":"RestrictInternetAccesstoVPC","Effect":"Deny","Action":["ec2:AttachInternetGateway","ec2:CreateInternetGateway","ec2:CreateEgressOnlyInternetGateway","globalaccelerator:Create*","globalaccelerator:Update*"],"Resource":"*"},{"Sid":"RestrictUserActions","Effect":"Deny","Action":["iam:AttachUserPolicy","iam:CreateUser","iam:DeleteUserPolicy","iam:DetachUserPolicy","iam:PutUserPermissionsBoundary","iam:PutUserPolicy","iam:AddUserToGroup","iam:DeleteUser","iam:RemoveUserFromGroup","iam:UpdateUser","iam:DeleteUserPermissionsBoundary","sts:AssumeRole"],"Resource":"*"},{"Sid":"DenyHighRiskNetworking","Effect":"Deny","Action":["ec2:AcceptTransitGateway*","ec2:AssociateTransitGateway*","ec2:CreateTransitGateway*","ec2:DeleteTransitGateway*","ec2:DeregisterTransitGateway*","ec2:DisableTransitGateway*","ec2:ModifyTransitGateway*","ec2:RegisterTransitGateway*","ec2:AcceptVpcPeeringConnection","ec2:CreateVpcPeeringConnection","ec2:DeleteVpcPeeringConnection","ec2:ModifyVpcPeeringConnectionOptions","ec2:RejectTransitGatewayPeeringAttachment","ec2:RejectVpcPeeringConnection"],"Resource":"*"}]}

#---------- Policies -------------
CostExplorerAccessPolicy:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.5.1/templates/IAM/managed-policy.yaml
  StackName: cost-explorer-access-policy
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
    Account: '*'
    Region: !Ref primaryRegion
  Parameters:
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
                "ce:Describe*",
                "ce:Get*",
                "ce:List*",
                "ce:*AnomalyMonitor",
                "ce:*AnomalySubscription",
                "ce:*Report"
            ],
            "Resource": "*"
          }
        ]
      }
    PolicyName: !Ref CostExplorerPolicyName

SynapseAthenaUserAccessPolicy:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.5.1/templates/IAM/managed-policy.yaml
  StackName: synapse-athena-user-access-policy
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
    Account: '*'
    Region: !Ref primaryRegion
  Parameters:
    PolicyDocument: !Sub >-
      {
        "Version": "2012-10-17",
        "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "athena:ListDataCatalogs",
                "athena:ListWorkGroups"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "athena:GetDataCatalog",
                "athena:ListDatabases",
                "athena:GetDatabase",
                "athena:GetTableMetadata",
                "athena:ListTableMetadata"
            ],
            "Resource": [
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:datacatalog",
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:datacatalog/AwsDataCatalog"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "glue:GetDatabases",
                "glue:GetDatabase",
                "glue:GetTables",
                "glue:GetTable",
                "glue:GetPartitions",
                "glue:GetPartition",
                "glue:BatchGetPartition"
            ],
            "Resource": [
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:catalog",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/*warehouse",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/*warehouse/*",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/scratch",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/scratch/*",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/*firehoselogs",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/*firehoselogs/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "glue:CreateTable"
            ],
            "Resource": [
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:catalog",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:database/scratch",
                "arn:aws:glue:us-east-1:${CurrentAccount.AccountId}:table/scratch/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "athena:StartQueryExecution",
                "athena:GetQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CreateWorkGroup",
                "athena:CreateNamedQuery",
                "athena:ListNamedQueries",
                "athena:BatchGetNamedQuery",
                "athena:GetQueryResultsStream",
                "athena:GetQueryRuntimeStatistics",
                "athena:ListQueryExecutions"
            ],
            "Resource": [
                "arn:aws:athena:us-east-1:${CurrentAccount.AccountId}:workgroup/*"
            ]
        },
            {
                "Effect": "Allow",
                "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:PutObject"
                ],
                "Resource": [
                    "arn:aws:s3:::aws-athena-query-results-${CurrentAccount.AccountId}-us-east-1",
                    "arn:aws:s3:::aws-athena-query-results-${CurrentAccount.AccountId}-us-east-1/*",
                    "arn:aws:s3:::aws-athena-query-results-us-east-1-${CurrentAccount.AccountId}",
                    "arn:aws:s3:::aws-athena-query-results-us-east-1-${CurrentAccount.AccountId}/*",
                    "arn:aws:s3:::*.athena-queries.sagebase.org",
                    "arn:aws:s3:::*.athena-queries.sagebase.org/*"
                ]
            },
            {
                "Effect": "Allow",
                "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket"
                ],
                "Resource": [
                    "arn:aws:s3:::*.datawarehouse.sagebase.org",
                    "arn:aws:s3:::*.datawarehouse.sagebase.org/*",
                    "arn:aws:s3:::*.log.sagebase.org",
                    "arn:aws:s3:::*.log.sagebase.org/*",
                    "arn:aws:s3:::*.filehandles.sagebase.org",
                    "arn:aws:s3:::*.filehandles.sagebase.org/*"
                ]
            }
        ]
      }
    PolicyName: SynapseAthenaUserAccessPolicy

#   https://stackoverflow.com/questions/58125181/cloud-formation-cant-upload-template-file
SynapseLlmDeveloperPolicy:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.5.1/templates/IAM/managed-policy.yaml
  StackName: synapsellm-developer-policy
  DefaultOrganizationBinding:
    IncludeMasterAccount: true
    Account:
      - !Ref SynapseLlmProdAccount
    Region: !Ref primaryRegion
  Parameters:
    PolicyDocument: >-
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::cf-template*"
          },
          {
            "Effect": "Allow",
            "Action": "iam:PassRole",
            "Resource": "*"
          }
        ]
      }
    PolicyName: SynapseLlmDeveloperPolicy

# Setup cross-account access to Image Builder Pipeline in Image Central account from Synapse accounts
SynapseImageCentralImageBuilderPipelineAccess:
  Type: update-stacks
  Template: https://raw.githubusercontent.com/Sage-Bionetworks/aws-infra/v0.2.10/templates/IAM/cross-account-access.yaml
  StackName: synapse-image-builder-pipline-read-access
  DefaultOrganizationBinding:
    Account: !Ref ImageCentralAccount
    Region: us-east-1
  Parameters:
    PrincipalArns:
      - arn:aws:iam::325565585839:root # SynapseProd AWS account ID
      - arn:aws:iam::449435941126:root # SynapseDev AWS account ID
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSImageBuilderReadOnlyAccess
